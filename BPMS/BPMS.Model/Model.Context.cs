//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace BPMS.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BPMSEntities : DbContext
    {
        public BPMSEntities()
            : base("name=BPMSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<DataDictionary> DataDictionary { get; set; }
        public virtual DbSet<Employee> Employee { get; set; }
        public virtual DbSet<MenuInfo> MenuInfo { get; set; }
        public virtual DbSet<Organization> Organization { get; set; }
        public virtual DbSet<PurviewInfo> PurviewInfo { get; set; }
        public virtual DbSet<RoleInfo> RoleInfo { get; set; }
        public virtual DbSet<RolePurview> RolePurview { get; set; }
        public virtual DbSet<SysLog> SysLog { get; set; }
        public virtual DbSet<SysLogDetail> SysLogDetail { get; set; }
        public virtual DbSet<SysLoginLog> SysLoginLog { get; set; }
        public virtual DbSet<SystemExceptionLog> SystemExceptionLog { get; set; }
        public virtual DbSet<SystemInfo> SystemInfo { get; set; }
        public virtual DbSet<TableColumns> TableColumns { get; set; }
        public virtual DbSet<TableId> TableId { get; set; }
        public virtual DbSet<UserInfo> UserInfo { get; set; }
        public virtual DbSet<UserOrganize> UserOrganize { get; set; }
        public virtual DbSet<UserPurview> UserPurview { get; set; }
        public virtual DbSet<UserRole> UserRole { get; set; }
    
        public virtual ObjectResult<Nullable<long>> GetNewID(string tableName)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("GetNewID", tableNameParameter);
        }
    
        public virtual ObjectResult<SP_GetUserMenu_Result> SP_GetUserMenu(Nullable<int> systemId, Nullable<int> userId)
        {
            var systemIdParameter = systemId.HasValue ?
                new ObjectParameter("systemId", systemId) :
                new ObjectParameter("systemId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetUserMenu_Result>("SP_GetUserMenu", systemIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<SP_GetUserPurview_Result> SP_GetUserPurview(Nullable<int> systemId, Nullable<int> userId)
        {
            var systemIdParameter = systemId.HasValue ?
                new ObjectParameter("systemId", systemId) :
                new ObjectParameter("systemId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetUserPurview_Result>("SP_GetUserPurview", systemIdParameter, userIdParameter);
        }
    }
}
